{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","urls","setUrls","randomId","setRandomId","useEffect","min","max","randomString","i","String","fromCharCode","Math","random","generateRandomString","apiRequest","event","a","preventDefault","axios","post","unique_code","then","response","console","log","catch","error","Row","className","style","paddingTop","type","onChange","e","target","value","placeholder","required","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSA6FeA,MA5Ef,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEmBF,mBAAS,MAF5B,mBAENG,EAFM,KAEIC,EAFJ,KAIbC,qBAAU,WACRD,EAb0B,SAACE,EAAKC,GAElC,IADA,IAAIC,EAAc,GACTC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAAgBE,OAAOC,aAAa,GAAAC,KAAKC,SAAuB,IAElE,OAAOL,EAQOM,MACX,IAGH,IAAMC,EAAU,uCAAG,WAAOC,GAAP,SAAAC,EAAA,yDACL,KAAThB,EADc,iDAIjBe,EAAME,iBACNC,IAAMC,KAAN,8CAA0D,CACxDnB,KAAMA,EACNoB,YAAalB,IAEdmB,MAAK,SAAUC,GAEdC,QAAQC,IAAI,gBAEbC,OAAM,SAAUC,GAEfH,QAAQC,IAAI,YAfG,2CAAH,sDAmBhB,OAGA,cAACG,EAAA,EAAD,UACE,qBAAKC,UAAU,MAAf,SACM,sBAAKA,UAAU,YAAf,UACF,qBAAKA,UAAU,2BAAf,SACE,6BAAK1B,MAEL,iCACI,sBAAK0B,UAAU,gBAAf,UACE,oBAAIC,MAAO,CAACC,WAAW,MAAvB,4CAGA,+DAGA,yDAGA,mDACgB,yDADhB,mCAGA,0BAEF,oBAAGF,UAAU,UAAb,UACA,uBAAOA,UAAU,sBAAjB,SAAuC,oEACvC,uBACA,uBACA,uBAAOA,UAAU,sBAAjB,SAAuC,uDACvC,+CACA,uCACA,uCACA,uBACA,uBACA,uBAAOA,UAAU,gBAAjB,SAAiC,wDACjC,uBAAOA,UAAU,6BAA6BG,KAAK,OAAOC,SAAU,SAACC,GAAKhC,EAAQgC,EAAEC,OAAOC,QAASA,MAAOnC,EAAMoC,YAAY,MAAMC,UAAQ,OAE3I,4BACA,wBAAQT,UAAU,qBAAqBU,QAASxB,EAAhD,yCCxECyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.378c53ac.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst  generateRandomString = (min, max) => {\r\n  let randomString =\"\";\r\n  for (let i = 0; i < 5; i++) {\r\n    randomString += String.fromCharCode(Math.random() * (90 - 65) + 65)\r\n  }  \r\n  return randomString\r\n}\r\n\r\nfunction App() {\r\n  const [urls, setUrls] = useState('');\r\n  const [randomId, setRandomId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setRandomId(generateRandomString());\r\n  }, [])\r\n\r\n\r\n  const apiRequest = async (event)  => {\r\n    if(urls === \"\")\r\n    return;\r\n    \r\n    event.preventDefault();\r\n    axios.post(`https://artur-electron.herokuapp.com/users/`, {\r\n      urls: urls,\r\n      unique_code: randomId\r\n    })\r\n    .then(function (response) {\r\n      // handle success\r\n      console.log('funcionou');\r\n    })\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.log('bugou');\r\n    })\r\n    }\r\n\r\n  return (\r\n    \r\n\r\n  <Row>\r\n    <div className=\"App\" >\r\n          <div className=\"w3-card-4\">\r\n        <div className=\"w3-container artur-color\">\r\n          <h2>{randomId}</h2>\r\n        </div>\r\n          <form>\r\n              <div className=\"w3-text-brown\">\r\n                <ul style={{paddingTop:\"1%\"}}>\r\n                  1º Cola o url para tracking\r\n                </ul>\r\n                <ul>\r\n                  2º Clica no Start tracking\r\n                </ul>\r\n                <ul>\r\n                  3º Copia o código\r\n                </ul>\r\n                <ul>\r\n                  4º Fala com o <strong>@artur_electron_bot</strong> no Telegram e envia o codigo\r\n                </ul>\r\n                <br></br>\r\n              </div>\r\n              <p className=\"artur-p\">\r\n              <label className=\"w3-text-brown-artur\"><b>Tens direito a 2 produtos apenas!</b></label>\r\n              <br></br>      \r\n              <br></br>\r\n              <label className=\"w3-text-brown-artur\"><b>EM ATUALIZAÇÃO</b></label>\r\n              <p>Funciona para:</p>\r\n              <p>WORTEN</p>\r\n              <p>PCDIGA</p>\r\n              <br></br>      \r\n              <br></br>\r\n              <label className=\"w3-text-brown\"><b>COMEÇA O TRACKING!</b></label>\r\n              <input className=\"w3-input w3-border w3-sand\" type=\"text\" onChange={(e)=>{setUrls(e.target.value)}} value={urls} placeholder=\"URL\" required></input>\r\n              </p>\r\n              <p>\r\n              <button className=\"w3-btn artur-color\" onClick={apiRequest}>Start tracking</button></p>\r\n          </form>\r\n      </div>\r\n  </div>\r\n  </Row>\r\n     \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}